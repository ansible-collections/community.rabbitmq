trigger:
  batch: true
  branches:
    include:
      - main
      - stable-*

pr:
  autoCancel: true
  branches:
    include:
      - main
      - stable-*

schedules:
  - cron: 0 9 * * *
    displayName: Nightly
    always: true
    branches:
      include:
        - main
        - stable-*

variables:
  - name: checkoutPath
    value: ansible_collections/community/rabbitmq
  - name: coverageBranches
    value: main
  - name: pipelinesCoverage
    value: coverage
  - name: entryPoint
    value: tests/utils/shippable/shippable.sh
  - name: fetchDepth
    value: 0

resources:
  containers:
    - container: default
      image: quay.io/ansible/azure-pipelines-test-container:4.0.1

pool: Standard

stages:
### Sanity & units
  - stage: Ansible_devel
    displayName: Sanity & Units devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: 'devel/sanity/1'
            - name: Units
              test: 'devel/units/1'

  - stage: Ansible_2_16
    displayName: Sanity & Units 2.16
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.16/sanity/1'
            - name: Units
              test: '2.16/units/1'

  - stage: Ansible_2_15
    displayName: Sanity & Units 2.15
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.15/sanity/1'
            - name: Units
              test: '2.15/units/1'

  - stage: Ansible_2_14
    displayName: Sanity & Units 2.14
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          targets:
            - name: Sanity
              test: '2.14/sanity/1'
            - name: Units
              test: '2.14/units/1'

### Docker
  - stage: Docker_devel
    displayName: Docker devel
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          # $ansible_version/$script/$test => devel / linux / ubuntu2004/1
          # shippable/linux.sh target=shippable/posix/group1
          # ansible-test integration ... shippable/posix/group1 --docker ubuntu2004
          # dir: integration/targets/
          testFormat: devel/linux/{0}/1
          targets:
            # NOTE: update integration roles to support platform before enabling here.
            #- name: CentOS 6
            #  test: centos6
            #- name: CentOS 7
            #  test: centos7
            #- name: Fedora 33
            #  test: fedora33
            #- name: Fedora 34
            #  test: fedora34
            #- name: openSUSE 15 py2
            #  test: opensuse15py2
            #- name: openSUSE 15 py3
            #  test: opensuse15
            #- name: Ubuntu 18.04
            #  test: ubuntu1804
            - name: Ubuntu 22.04
              test: ubuntu2204
            # Currently 20.04 is causing devel to fail.  This maybe due to Ubuntu 20.04 running python
            # 3.8, however, ansible-test requires 3.9+.  This means ansible test spins up a controller
            # and target container which is probably why rabbitmq_publish is not able to connect to
            # rabbitmq on localhost.
            #- name: Ubuntu 20.04
            #  test: ubuntu2004

  - stage: Docker_2_16
    displayName: Docker 2.16
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.16/linux/{0}/1
          targets:
            - name: Ubuntu 22.04
              test: ubuntu2204

  - stage: Docker_2_15
    displayName: Docker 2.15
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.15/linux/{0}/1
          targets:
            - name: Ubuntu 22.04
              test: ubuntu2204
            # Currently 20.04 is causing devel to fail.  This maybe due to Ubuntu 20.04 running python
            # 3.8, however, ansible-test requires 3.9+.  This means ansible test spins up a controller
            # and target container which is probably why rabbitmq_publish is not able to connect to
            # rabbitmq on localhost.
            #- name: Ubuntu 20.04
            #  test: ubuntu2004

  - stage: Docker_2_14
    displayName: Docker 2.14
    dependsOn: []
    jobs:
      - template: templates/matrix.yml
        parameters:
          testFormat: 2.14/linux/{0}/1
          targets:
            - name: Ubuntu 22.04
              test: ubuntu2204
            # Currently 20.04 is causing devel to fail.  This maybe due to Ubuntu 20.04 running python
            # 3.8, however, ansible-test requires 3.9+.  This means ansible test spins up a controller
            # and target container which is probably why rabbitmq_publish is not able to connect to
            # rabbitmq on localhost.
            #- name: Ubuntu 20.04
            #  test: ubuntu2004

### Remote
#  - stage: Remote_devel
#    displayName: Remote devel
#    dependsOn: []
#    jobs:
#      - template: templates/matrix.yml
#        parameters:
#          testFormat: devel/{0}/1
#          targets:
#            - name: RHEL 7.9
#              test: rhel/7.9
#            - name: RHEL 8.3
#              test: rhel/8.3
#            - name: FreeBSD 11.4
#              test: freebsd/11.4
#            - name: FreeBSD 12.2
#              test: freebsd/12.2

  - stage: Summary
    condition: succeededOrFailed()
    dependsOn:
      - Ansible_devel
      - Ansible_2_15
      - Ansible_2_14
      - Docker_devel
      - Docker_2_15
      - Docker_2_14
      #- Remote_devel
    jobs:
      - template: templates/coverage.yml
